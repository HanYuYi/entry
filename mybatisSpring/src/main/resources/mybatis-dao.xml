<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       https://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        使用spring管理mybatis的xml配置其实步骤和mybatis里类似，只不过在spring里面用bean管理了，这里一共分三步：
        1、加载数据库配置
        2、使用 mybatis-spring 的 SqlSessionFactoryBean 创建 sqlSessionFactory
        3、使用 mybatis-spring 的 SqlSessionTemplate 创建 sqlSession

    -->

    <!--1-->
    <context:property-placeholder location="classpath:db.properties"/>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${DRIVER}"/>
        <property name="url" value="${DATABASE_URL}"/>
        <property name="username" value="${DATABASE_USERNAME}"/>
        <property name="password" value="${DATABASE_PASSWORD}"/>
    </bean>

    <!--2-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--相当于import的作用-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--指定加载的mapper，相当于mybatis里面注册mappers-->
        <property name="mapperLocations" value="classpath:com/HanYuYi/mapper/BlogMapper.xml"/>
    </bean>

    <!--3-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>



    <!--mybatis-spring的声明式事务管理-->
    <!-- 1-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 2 AOP 织入事务-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 给具体方法配置事务，有事务的方法一定要配置，通常直接用*配置-->
        <tx:attributes>
            <!-- propagation 事务传播特性 https://blog.csdn.net/weixin_43283513/article/details/111408968-->
            <tx:method name="getAllBlog" propagation="REQUIRED"/>
            <tx:method name="insert" propagation="REQUIRED"/>
            <tx:method name="delete" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 3 配置事务切入-->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.HanYuYi.mapper.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
</beans>